syntax = "proto3";

package qubic.stats.api.pb;

option go_package = "github.com/qubic/qubic-stats-api/protobuff/";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";


message QubicData {
  int64 timestamp = 1;
  int64 circulating_supply = 2;
  int32 active_addresses = 3;
  float price = 4;
  int64 market_cap = 5;
  uint32 epoch = 6;
  uint32 current_tick = 7;
  uint32 ticks_in_current_epoch = 8;
  uint32 empty_ticks_in_current_epoch = 9;
  float epoch_tick_quality = 10;
  uint64 burned_qus = 11;
}

// Rich list types

message RichListEntity {
  string identity = 1;
  int64 balance = 2;
}

message RichList {
  repeated RichListEntity entities = 1;
}

message GetRichListLengthRequest {
  string epoch = 1;
}

message GetRichListLengthResponse {
  uint32 length = 1;
}

message GetRichListSliceRequest {
  string epoch = 1;
  uint32 start = 2;
  uint32 end = 3;
}
message GetRichListSliceResponse {
  RichList rich_list = 1;
}


//Latest data

message GetLatestDataResponse {
  QubicData data = 1;
}

service StatsService {

  rpc GetLatestData(google.protobuf.Empty) returns (GetLatestDataResponse) {
    option (google.api.http) = {
      get: "/v1/latest-stats"
    };
  };

  rpc GetRichListLength(GetRichListLengthRequest) returns (GetRichListLengthResponse) {
    option (google.api.http) = {
      get: "/v1/epochs/{epoch}/rich-list/length"
    };
  };

  rpc GetRichListSlice(GetRichListSliceRequest) returns (GetRichListSliceResponse) {
    option (google.api.http) = {
      get: "/v1/epochs/{epoch}/rich-list"
    };
  };

}